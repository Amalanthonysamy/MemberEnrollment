{
    "swagger": "2.0",
    "info": {
        "description": "This is api service for managing Claims",
        "title": "Claim API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "parameswaribala@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:7177",
    "basePath": "/",
    "paths": {
        "/members/v1.0": {
            "get": {
                "description": "Returns list of members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Get all members",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store.Member"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Create a new member",
                "parameters": [
                    {
                        "description": "Member to create",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/store.Member"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/store.Member"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/members/v1.0/{memberid}": {
            "get": {
                "description": "Get details of requested member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Get details of requested member",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the Member",
                        "name": "memberid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/store.Member"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update existing member with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Update existing member",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the Member to update",
                        "name": "memberid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated member fields",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/store.Member"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/store.Member"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete requested member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Delete requested member",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the Member",
                        "name": "memberid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/store.Member"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "store.BusinessUnit": {
            "type": "object",
            "properties": {
                "businessType": {
                    "type": "string"
                },
                "businessUnitCode": {
                    "type": "string"
                },
                "businessUnitDescription": {
                    "type": "string"
                },
                "businessUnitName": {
                    "type": "string"
                }
            }
        },
        "store.Member": {
            "type": "object",
            "properties": {
                "businessUnit": {
                    "$ref": "#/definitions/store.BusinessUnit"
                },
                "createdAt": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "effectiveDate": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "memberCode": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "planDetails": {
                    "$ref": "#/definitions/store.PlanProduct"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "store.PlanProduct": {
            "type": "object",
            "properties": {
                "planProductCode": {
                    "type": "string"
                },
                "planProductDescription": {
                    "type": "string"
                },
                "planProductName": {
                    "type": "string"
                }
            }
        }
    }
}